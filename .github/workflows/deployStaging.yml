name: Deploy to Staging
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    name: Deploy to s3 staging
    environment:
      name: staging
      url: http://docs-stg.launchdarkly.com/${{ github.event.pull_request.number }}
    concurrency:
      group: staging-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch entire history to get Last Edit date for topics
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STG_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STG_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Caching Gatsby
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-${{ hashFiles('**/yarn.lock') }}
      - run: CYPRESS_INSTALL_BINARY=0 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install --immutable --immutable-cache
      - run: yarn build-deploy-staging
        env:
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
          GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY }}
          GATSBY_ALGOLIA_INDEX: 'Docs'
          LAUNCHDARKLY_CLIENT_SIDE_ID: ${{ secrets.STG_LAUNCHDARKLY_CLIENT_SIDE_ID }}
          GATSBY_DATADOG_CLIENT_TOKEN: ${{ secrets.STG_DATADOG_CLIENT_TOKEN }}
          GATSBY_DATADOG_RUM_APPLICATION_ID: ${{ secrets.DATADOG_RUM_APPLICATION_ID }}
          GATSBY_DATADOG_RUM_CLIENT_TOKEN: ${{ secrets.DATADOG_RUM_CLIENT_TOKEN }}
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
          GATSBY_TRACKJS_TOKEN: ${{ secrets.TRACKJS_TOKEN }}
          AWS_S3_BUCKET: 'launchdarkly-docs-staging'
          AWS_HOSTNAME: 'docs-stg.launchdarkly.com'
          CI: true
  smoke-test:
    needs: build-deploy
    runs-on: ubuntu-latest
    name: Smoke test staging
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cypress run
        uses: cypress-io/github-action@v2
        timeout-minutes: 5
        id: cypress
        continue-on-error: true
        with:
          command-prefix: yarn dlx
          install-command: yarn install --immutable --immutable-cache
          build: yarn build-nav-data
          headless: true
          config: baseUrl=https://docs-stg.launchdarkly.com/${{ github.event.pull_request.number }}
          spec: cypress/integration/smoke.test.ts
          env: pr_number=${{ github.event.pull_request.number }}
          wait-on: 'https://docs-stg.launchdarkly.com/${{ github.event.pull_request.number }}/home'
          record: true
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Cypress outcome
        if: steps.cypress.outcome == 'failure' || steps.cypress.outcome == 'cancelled'
        run: exit 1
